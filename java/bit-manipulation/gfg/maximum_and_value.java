/*
Maximum AND Value 

Given an array arr[] of N positive elements. The task is to find the Maximum AND Value generated by any pair(arri, arrj) from the array such that i != j.
Note: AND is bitwise '&' operator.


Example 1:

Input: 
N = 4
arr[] = {4, 8, 12, 16}
Output: 8
Explanation:
Pair (8,12) has the Maximum AND Value 8.
Example 2:

Input:
N = 4
arr[] = {4, 8, 16, 2}
Output: 0
Explanation: Any two pairs of the array has 
Maximum AND Value 0.

Your Task: 
You don't need to read input or print anything. Your task is to complete the function maxAND() which takes the array elements and N (size of the array) as input parameters and returns the maximum AND value generated by any pair in the array. 

Expected Time Complexity: O(N * log M), where M is the maximum element of the array.
Expected Auxiliary Space: O(1).

Constraints:
1 <= N <= 10^5
1 <= arr[i] <= 10^5
*/

class Solution{
    
   // Function for finding maximum AND value.
    public static int maxAND (int arr[], int N) {
        
        // Your code here
        // You can add extra function (if required)
        int res = 0;
        int max = getMax(arr);
        int m = (int) Math.floor(Math.log(max)/Math.log(2));
        for (int i=m;i>=0;i--) {
            int count = checkPattern(res | (1<<i), arr);
            if (count >= 2) {
                res |= (1<<i);
            }
        }
        return res;
    }
    
    private static int getMax(int[] arr) {
        int max = 0;
        for (int num: arr) {
            max = Math.max(max, num);
        }
        return max;
    }
    
    private static int checkPattern(int pattern, int[] arr) {
        int count = 0;
        for (int num: arr) {
            if ((num&pattern) == pattern) count++;
        }
        return count;
    }
    
}
